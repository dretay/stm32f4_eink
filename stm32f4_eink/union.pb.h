/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Wed Aug 15 00:59:55 2018. */

#ifndef PB_UNION_PB_H_INCLUDED
#define PB_UNION_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _Weather_WeatherType {
    Weather_WeatherType_CHANCEOFSTORM = 0,
    Weather_WeatherType_CLOUDS = 1,
    Weather_WeatherType_FOGDAY = 2,
    Weather_WeatherType_FOGNIGHT = 3,
    Weather_WeatherType_LITTLERAIN = 4,
    Weather_WeatherType_LITTLESNOW = 5,
    Weather_WeatherType_MOON = 6,
    Weather_WeatherType_PARTLYCLOUDYDAY = 7,
    Weather_WeatherType_PARTLYCLOUDYNIGHT = 8,
    Weather_WeatherType_RAIN = 9,
    Weather_WeatherType_SLEET = 10,
    Weather_WeatherType_SNOW = 11,
    Weather_WeatherType_STORM = 12
} Weather_WeatherType;
#define _Weather_WeatherType_MIN Weather_WeatherType_CHANCEOFSTORM
#define _Weather_WeatherType_MAX Weather_WeatherType_STORM
#define _Weather_WeatherType_ARRAYSIZE ((Weather_WeatherType)(Weather_WeatherType_STORM+1))

typedef enum _RetrivalStatus_StatusType {
    RetrivalStatus_StatusType_START = 0,
    RetrivalStatus_StatusType_UPDATE = 1,
    RetrivalStatus_StatusType_SUCCESS = 2,
    RetrivalStatus_StatusType_FAIL = 3
} RetrivalStatus_StatusType;
#define _RetrivalStatus_StatusType_MIN RetrivalStatus_StatusType_START
#define _RetrivalStatus_StatusType_MAX RetrivalStatus_StatusType_FAIL
#define _RetrivalStatus_StatusType_ARRAYSIZE ((RetrivalStatus_StatusType)(RetrivalStatus_StatusType_FAIL+1))

/* Struct definitions */
typedef struct _Meeting {
    uint32_t start;
    uint32_t end;
    char title[32];
    char room[32];
    uint32_t idx;
/* @@protoc_insertion_point(struct:Meeting) */
} Meeting;

typedef struct _RetrivalStatus {
    RetrivalStatus_StatusType status;
    bool has_message;
    char message[32];
/* @@protoc_insertion_point(struct:RetrivalStatus) */
} RetrivalStatus;

typedef struct _Weather {
    Weather_WeatherType type;
    uint32_t hour_of_day;
    uint32_t idx;
/* @@protoc_insertion_point(struct:Weather) */
} Weather;

typedef struct _UnionMessage {
    bool has_state;
    RetrivalStatus state;
    bool has_meeting;
    Meeting meeting;
    bool has_weather;
    Weather weather;
/* @@protoc_insertion_point(struct:UnionMessage) */
} UnionMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Weather_init_default                     {(Weather_WeatherType)0, 0, 0}
#define Meeting_init_default                     {0, 0, "", "", 0}
#define RetrivalStatus_init_default              {(RetrivalStatus_StatusType)0, false, ""}
#define UnionMessage_init_default                {false, RetrivalStatus_init_default, false, Meeting_init_default, false, Weather_init_default}
#define Weather_init_zero                        {(Weather_WeatherType)0, 0, 0}
#define Meeting_init_zero                        {0, 0, "", "", 0}
#define RetrivalStatus_init_zero                 {(RetrivalStatus_StatusType)0, false, ""}
#define UnionMessage_init_zero                   {false, RetrivalStatus_init_zero, false, Meeting_init_zero, false, Weather_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define Meeting_start_tag                        1
#define Meeting_end_tag                          2
#define Meeting_title_tag                        3
#define Meeting_room_tag                         4
#define Meeting_idx_tag                          5
#define RetrivalStatus_status_tag                1
#define RetrivalStatus_message_tag               2
#define Weather_type_tag                         1
#define Weather_hour_of_day_tag                  2
#define Weather_idx_tag                          3
#define UnionMessage_state_tag                   1
#define UnionMessage_meeting_tag                 2
#define UnionMessage_weather_tag                 3

/* Struct field encoding specification for nanopb */
extern const pb_field_t Weather_fields[4];
extern const pb_field_t Meeting_fields[6];
extern const pb_field_t RetrivalStatus_fields[3];
extern const pb_field_t UnionMessage_fields[4];

/* Maximum encoded size of messages (where known) */
#define Weather_size                             14
#define Meeting_size                             86
#define RetrivalStatus_size                      36
#define UnionMessage_size                        142

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define UNION_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
